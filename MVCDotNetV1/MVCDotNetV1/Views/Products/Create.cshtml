@model MVCDotNetV1.Models.Product

@{
    ViewBag.Title = "Create";
}
<div class="container  form-horizontal" style="margin:50px">
    <h2 class="text-center" style="margin:20px">@ViewBag.Title Prouduct</h2>

    @using (Html.BeginForm("Create", "Products", FormMethod.Post, new { enctype = "multipart/form-data", style = "background-color:#c0c0c085;padding:50px;" }))
    {
        @Html.AntiForgeryToken()



        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <label class="control-label col-md-2">Image</label>
            <div class="col-md-10">

                <input class="form-control" type="file" name="Image" />
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Subcat.Maincat.maincatName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.MainCategory, new { htmlAttributes = new { @class = "form-control" } })*@
                @*@Html.DropDownList("maincatID", null, htmlAttributes: new { @class = "form-control" })*@
                @Html.DropDownList("maincatID", ViewBag.maincatID as SelectList, " Select Maincategory", htmlAttributes: new { @class = "form-control" })




                @Html.ValidationMessageFor(model => model.Subcat.Maincat.maincatName, "", new { @class = "text-danger" })
            </div>
        </div>
         <div class="form-group">
            @Html.LabelFor(model => model.Subcat.subcatName, htmlAttributes: new { @class = "control-label col-md-2" })
             <div class="col-md-10">
                 @*@Html.EditorFor(model => model.SubCategory, new { htmlAttributes = new { @class = "form-control" } })*@
                 @*@Html.DropDownList("subcatId", null, htmlAttributes: new { @class = "form-control" })*@

                 @Html.DropDownList("subcatId", new SelectList(" "), " Select Subcategory", htmlAttributes: new { @class = "form-control" })


                 @Html.ValidationMessageFor(model => model.Subcat.subcatName, "", new { @class = "text-danger" })
             </div>
                </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Discount, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Discount, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Discount, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.MadeIn, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.MadeIn, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.MadeIn, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.SupplierName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.SupplierName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.SupplierName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Weight, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Weight, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.AvailableQuantity, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.AvailableQuantity, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.AvailableQuantity, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Create" class="btn btn-default" />
                            </div>
                        </div>

                        @Html.ActionLink("Back to List", "Index")


                    }
</div>
