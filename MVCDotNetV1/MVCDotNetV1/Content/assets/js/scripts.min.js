xfun(); function xfun() { $.ajax({ method: "GET", url: "https://localhost:44301/Home/IsAuthorized", dataType: "json", success: a => { console.log(a.isAuthorized), isauthorize = a.isAuthorized, yfun(isauthorize) }, error: a => { console.log(a) } }) } function zfun(a) { $.ajax({ method: "POST", url: "https://localhost:44301/Home/Add", contentType: "application/json", dataType: "json", data: a, success: a => { console.log(a) }, error: a => { console.log(a) } }) } function mfun() { $.ajax({ method: "GET", url: "https://localhost:44301/Home/Get", dataType: "json", success: a => { console.log("local" + a.cartContent), "null" != a.cartContent && !0 == a.isValid && (localStorage.setItem("shoppingCart", a.cartContent), cart = JSON.parse(a.cartContent), console.log(cart, typeof cart), kfun()) }, error: a => { console.log(a) } }) } function saveCart() { localStorage.setItem("shoppingCart", JSON.stringify(cart)), zfun(JSON.stringify(cart)) } function loadCart() { mfun() } var shoppingCart = function () { function a(a, b, c, d) { this.name = a, this.price = b, this.count = c, this.AvailableQuantity = d } cart = []; return { addItemToCart: function (b, c, d, e) { for (var f in cart) if (cart[f].name === b) return cart[f].count++, void saveCart(); var f = new a(b, c, d, e); console.log(f), cart.push(f), saveCart() }, setCountForItem: function (a, b) { for (var c in cart) if (cart[c].name === a) { cart[c].count = b; break } }, removeItemFromCart: function (a) { for (var b in cart) if (cart[b].name === a) { cart[b].count--, 0 === cart[b].count && cart.splice(b, 1); break } saveCart() }, removeItemFromCartAll: function (a) { for (var b in cart) if (cart[b].name === a) { cart.splice(b, 1); break } saveCart() }, clearCart: function () { cart = [], saveCart() }, totalCount: function () { var a = 0; for (var b in cart) a += cart[b].count; return a }, totalCart: function () { var a = 0; for (var b in cart) a += cart[b].price * cart[b].count; return +a.toFixed(2) }, listCart: function () { var a = []; for (i in cart) { for (p in console.log(i), item = cart[i], itemCopy = {}, item) itemCopy[p] = item[p]; itemCopy.total = (+(item.price * item.count)).toFixed(2), a.push(itemCopy) } return console.log("hi"), a } } }(); function yfun(a) { a && loadCart(), $(".add-to-cart").click(function (b) { b.preventDefault(); var c = $(this).data("name"), d = +$(this).data("price"), e = $(this).data("available-quantity"); a ? (shoppingCart.addItemToCart(c, d, 1, e), kfun()) : location.href = "https://localhost:44301/Account/Login" }), $(".clear-cart").click(function () { a ? (shoppingCart.clearCart(), kfun()) : location.href = "https://localhost:44301/Account/Login" }) } function kfun() { var a = shoppingCart.listCart(), b = ""; for (var c in a) { let d = `<select data-product-name="${a[c].name}" class="cart-drop-down-list">`; for (let b = 1; b <= a[c].AvailableQuantity; ++b)d += a[c].count == b ? `<option selected value="${b}">${b}</option>` : `<option value="${b}">${b}</option>`; d += "</select>", b += "<tr><td>" + a[c].name + "</td><td>(" + a[c].price + ")</td>" + `<td>${d}</td>` + "<td> = </td><td>" + a[c].total + "</td><td><button class='delete-item btn btn-danger' data-name=" + a[c].name + ">X</button></td></tr>" } $(".show-cart").html(b), $(".total-cart").html(shoppingCart.totalCart()), $(".total-count").html(shoppingCart.totalCount()), $(".cart-drop-down-list").change(a => { var b = a.target.dataset.productName; let c = a.target.selectedIndex + 1; shoppingCart.setCountForItem(b, c), kfun(), saveCart() }) } $(".show-cart").on("click", ".delete-item", function () { var a = $(this).data("name"); shoppingCart.removeItemFromCartAll(a), kfun() }), $(".show-cart").on("click", ".minus-item", function () { var a = $(this).data("name"); shoppingCart.removeItemFromCart(a), kfun() }), $(".show-cart").on("click", ".plus-item", function () { var a = $(this).data("name"); shoppingCart.addItemToCart(a), kfun() }), $(".show-cart").on("change", ".item-count", function () { var a = $(this).data("name"), b = +$(this).val(); shoppingCart.setCountForItem(a, b), kfun() });